{"ast":null,"code":"var _jsxFileName = \"/Users/yeabsirabizualem/Documents/f24(Jun1)/CSPS415_AI/ArtSphereBackendTrial/frontend/src/pages/Suggest.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/Suggest.css'; // Assuming the CSS file you provided earlier\n\n// Array of art pieces (this can be replaced with your actual art data)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst artPieces = [{\n  title: \"Starry Night\",\n  description: \"A famous painting by Vincent van Gogh, depicting a starry night over a quiet village.\",\n  image: \"starry-night.jpg\" // Replace with the actual image path\n}, {\n  title: \"Mona Lisa\",\n  description: \"The iconic portrait by Leonardo da Vinci, known for its enigmatic expression.\",\n  image: \"mona-lisa.jpg\" // Replace with the actual image path\n}, {\n  title: \"The Persistence of Memory\",\n  description: \"A surrealist painting by Salvador Dalí, featuring melting clocks in a dreamlike landscape.\",\n  image: \"persistence-of-memory.jpg\" // Replace with the actual image path\n}, {\n  title: \"The Scream\",\n  description: \"A famous painting by Edvard Munch, representing an agonized figure against a turbulent sky.\",\n  image: \"the-scream.jpg\" // Replace with the actual image path\n}, {\n  title: \"Guernica\",\n  description: \"A large black and white painting by Pablo Picasso, symbolizing the tragedies of war.\",\n  image: \"guernica.jpg\" // Replace with the actual image path\n}, {\n  title: \"The Kiss\",\n  description: \"A stunning piece by Gustav Klimt, featuring a couple in an intimate embrace.\",\n  image: \"the-kiss.jpg\" // Replace with the actual image path\n}];\nfunction Suggest() {\n  _s();\n  // State to store the current random art piece\n  const [randomArt, setRandomArt] = useState(getRandomArt());\n\n  // Function to get a random art piece\n  function getRandomArt() {\n    const randomIndex = Math.floor(Math.random() * artPieces.length);\n    return artPieces[randomIndex];\n  }\n\n  // Handler to suggest a new random art piece when clicked\n  const suggestNewArt = () => {\n    setRandomArt(getRandomArt());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"suggest-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Sphere Suggest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Explore a random piece of art from our collection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: suggestNewArt,\n      className: \"suggest-button\",\n      children: \"Suggest New Art\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"art-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: randomArt.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: randomArt.image,\n        alt: randomArt.title,\n        className: \"image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"art-description\",\n        children: randomArt.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(Suggest, \"sZDbSTR7SDBoPmMy3/e4DJIHTXo=\");\n_c = Suggest;\nexport default Suggest;\nvar _c;\n$RefreshReg$(_c, \"Suggest\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","artPieces","title","description","image","Suggest","_s","randomArt","setRandomArt","getRandomArt","randomIndex","Math","floor","random","length","suggestNewArt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/yeabsirabizualem/Documents/f24(Jun1)/CSPS415_AI/ArtSphereBackendTrial/frontend/src/pages/Suggest.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/Suggest.css'; // Assuming the CSS file you provided earlier\r\n\r\n// Array of art pieces (this can be replaced with your actual art data)\r\nconst artPieces = [\r\n    {\r\n        title: \"Starry Night\",\r\n        description: \"A famous painting by Vincent van Gogh, depicting a starry night over a quiet village.\",\r\n        image: \"starry-night.jpg\"  // Replace with the actual image path\r\n    },\r\n    {\r\n        title: \"Mona Lisa\",\r\n        description: \"The iconic portrait by Leonardo da Vinci, known for its enigmatic expression.\",\r\n        image: \"mona-lisa.jpg\"  // Replace with the actual image path\r\n    },\r\n    {\r\n        title: \"The Persistence of Memory\",\r\n        description: \"A surrealist painting by Salvador Dalí, featuring melting clocks in a dreamlike landscape.\",\r\n        image: \"persistence-of-memory.jpg\"  // Replace with the actual image path\r\n    },\r\n    {\r\n        title: \"The Scream\",\r\n        description: \"A famous painting by Edvard Munch, representing an agonized figure against a turbulent sky.\",\r\n        image: \"the-scream.jpg\"  // Replace with the actual image path\r\n    },\r\n    {\r\n        title: \"Guernica\",\r\n        description: \"A large black and white painting by Pablo Picasso, symbolizing the tragedies of war.\",\r\n        image: \"guernica.jpg\"  // Replace with the actual image path\r\n    },\r\n    {\r\n        title: \"The Kiss\",\r\n        description: \"A stunning piece by Gustav Klimt, featuring a couple in an intimate embrace.\",\r\n        image: \"the-kiss.jpg\"  // Replace with the actual image path\r\n    }\r\n];\r\n\r\nfunction Suggest() {\r\n    // State to store the current random art piece\r\n    const [randomArt, setRandomArt] = useState(getRandomArt());\r\n\r\n    // Function to get a random art piece\r\n    function getRandomArt() {\r\n        const randomIndex = Math.floor(Math.random() * artPieces.length);\r\n        return artPieces[randomIndex];\r\n    }\r\n\r\n    // Handler to suggest a new random art piece when clicked\r\n    const suggestNewArt = () => {\r\n        setRandomArt(getRandomArt());\r\n    };\r\n\r\n    return (\r\n        <div className=\"suggest-container\">\r\n            <h1>Welcome to Sphere Suggest</h1>\r\n            <p>Explore a random piece of art from our collection</p>\r\n\r\n            {/* Button to trigger a new random piece */}\r\n            <button onClick={suggestNewArt} className=\"suggest-button\">Suggest New Art</button>\r\n\r\n            {/* Display the current random art */}\r\n            <div className=\"art-display\">\r\n                <h2>{randomArt.title}</h2>\r\n                <img src={randomArt.image} alt={randomArt.title} className=\"image\" />\r\n                <p className=\"art-description\">{randomArt.description}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Suggest;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}